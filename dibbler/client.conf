#
# Example client configuration file: default
#

# Uncomment following line to use Link-layer DUID instead of default Link-layer+time
#duid-type duid-ll

# Uncomment following line to make dibbler very aggressive about getting requested
# options.
#insist-mode

# Uncomment following line to make dibbler accept downed/not associated interfaces
inactive-mode

# Uncomment following line to skip confirm sending (after crash or power outage)
skip-confirm

log-mode short

# 7 = omit debug messages
log-level 7

# Uncomment this line to run script every time response is received
# script "/var/lib/dibbler/client-notify.sh"

script "/etc/dibbler/radvd.sh"

# Dibbler 1.0.0RC1 and earlier added obtained addresses with /64 prefix. This
# violated spec (RFC3315), but was very useful as hosts in the network can
# exchange data immediately, without extra wait for receiving corresponding RA.
# See discussion here: https://klub.com.pl/bugzilla3/show_bug.cgi?id=222
# To restore previous behavior, uncomment this line:
# strict-rfc-no-routing 0

# Dibbler can detect interfaces and ask for address on every suitable interface.
# If that is what you require, just don't mention any interfaces

# On the other hand, you may want to specify interfaces to be configured
# explicitely

downlink-prefix-ifaces "none" 
iface "data" {
pd
option 16 hex 00:00:04:0e:00:05:73:61:67:65:6d
option 15 hex 00:2b:46:53:56:44:53:4c:5f:6c:69:76:65:62:6f:78:2e:49:6e:74:65:72:6e:65:74:2e:73:6f:66:74:61:74:68:6f:6d:65:2e:6c:69:76:65:62:6f:78:33
option 11 hex 00:00:00:00:00:00:00:00:00:00:00:66:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx
option 11 hex 00:00:00:00:00:00:00:00:00:00:00:66:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx
}